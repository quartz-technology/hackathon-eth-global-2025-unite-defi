export const QuoterMockABI = [
  {
    type: "function",
    name: "getQuote",
    inputs: [
      {
        name: "_token0",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token1",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quotes",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setQuote",
    inputs: [
      {
        name: "_token0",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token1",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_quote",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export const QuoterMockBytecode =
  "0x60806040523461001f57610011610024565b6103ef61002f82396103ef90f35b61002a565b60405190565b5f80fdfe60806040526004361015610013575b6102f6565b61001d5f3561004c565b80631187dace146100475780632ba01111146100425763c515ee230361000e576102c0565b610289565b610208565b60e01c90565b60405190565b5f80fd5b5f80fd5b60018060a01b031690565b61007490610060565b90565b6100808161006b565b0361008757565b5f80fd5b9050359061009882610077565b565b90565b6100a68161009a565b036100ad57565b5f80fd5b905035906100be8261009d565b565b90916060828403126100f5576100f26100db845f850161008b565b936100e9816020860161008b565b936040016100b1565b90565b61005c565b90565b61011161010c61011692610060565b6100fa565b610060565b90565b610122906100fd565b90565b61012e90610119565b90565b9061013b90610125565b5f5260205260405f2090565b9061015190610125565b5f5260205260405f2090565b61017161016c6101769261009a565b6100fa565b61009a565b90565b906101839061015d565b5f5260205260405f2090565b1c90565b90565b6101a69060086101ab930261018f565b610193565b90565b906101b99154610196565b90565b906101e3926101d96101de926101d45f955f96610131565b610147565b610179565b6101ae565b90565b6101ef9061009a565b9052565b9190610206905f602085019401906101e6565b565b346102395761023561022461021e3660046100c0565b916101bc565b61022c610052565b918291826101f3565b0390f35b610058565b60808183031261027f57610254825f830161008b565b9261027c610265846020850161008b565b9361027381604086016100b1565b936060016100b1565b90565b61005c565b5f0190565b346102bb576102a561029c36600461023e565b92919091610338565b6102ad610052565b806102b781610284565b0390f35b610058565b346102f1576102ed6102dc6102d63660046100c0565b91610389565b6102e4610052565b918291826101f3565b0390f35b610058565b5f80fd5b5f1b90565b9061030b5f19916102fa565b9181191691161790565b90565b9061032d6103286103349261015d565b610315565b82546102ff565b9055565b916103536103589261034e61035d96955f610131565b610147565b610179565b610318565b565b5f90565b5f1c90565b61037461037991610363565b610193565b90565b6103869054610368565b90565b916103ac6103b1926103a76103b6956103a061035f565b505f610131565b610147565b610179565b61037c565b9056fea26469706673582212207bae36ed5dd74453463683c767289e7ef7a72ae082e74eb37928ac788932ca0964736f6c63430008170033";
