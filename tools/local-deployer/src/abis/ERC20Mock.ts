export const ERC20MockABI = [
  {
    type: "constructor",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "_decimals",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

export const ERC20MockBytecode =
  "0x60a06040523462000041576200001f6200001862000213565b916200023b565b6200002962000047565b610de3620005058239608051816107190152610de390f35b6200004d565b60405190565b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906200007b9062000051565b810190811060018060401b038211176200009457604052565b6200005b565b90620000b1620000a962000047565b92836200006f565b565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b60018060401b038111620000e257620000de60209162000051565b0190565b6200005b565b5f5b838110620000fb575050905f910152565b806020918301518185015201620000ea565b90929192620001266200012082620000c3565b6200009a565b9381855260208501908284011162000145576200014392620000e8565b565b620000bf565b9080601f830112156200016c5781602062000169935191016200010d565b90565b620000bb565b60ff1690565b620001838162000172565b036200018b57565b5f80fd5b905051906200019e8262000178565b565b90916060828403126200020d575f82015160018060401b038111620002075783620001cd9184016200014b565b9260208301519060018060401b0382116200020157620001f481620001fe9386016200014b565b936040016200018f565b90565b620000b7565b620000b7565b620000b3565b62000236620012e8803803806200022a816200009a565b928339810190620001a0565b909192565b906200024791620004e8565b608052565b5190565b634e487b7160e01b5f52602260045260245ffd5b906001600283049216801562000287575b60208310146200028157565b62000250565b91607f169162000275565b5f5260205f2090565b601f602091010490565b1b90565b91906008620002c8910291620002c15f1984620002a5565b92620002a5565b9181191691161790565b90565b90565b620002f1620002eb620002f792620002d2565b620002d5565b620002d2565b90565b90565b919062000318620003126200032193620002d8565b620002fa565b908354620002a9565b9055565b5f90565b6200033f916200033862000325565b91620002fd565b565b5b8181106200034e575050565b806200035d5f60019362000329565b0162000342565b9190601f811162000375575b505050565b62000384620003af9362000292565b90602062000392846200029b565b83019310620003b8575b620003a7906200029b565b019062000341565b5f808062000370565b9150620003a7819290506200039c565b1c90565b90620003de905f1990600802620003c8565b191690565b81620003ef91620003cc565b906002021790565b9062000403816200024c565b9060018060401b038211620004d4576200042a8262000423855462000264565b8562000364565b602090601f8311600114620004635791809162000451935f9262000456575b5050620003e3565b90555b565b90915001515f8062000449565b601f19831691620004748562000292565b925f5b818110620004bb575091600293918560019694106200049e575b5050500201905562000454565b620004b0910151601f841690620003cc565b90555f808062000491565b9193602060018192878701518155019501920162000477565b6200005b565b90620004e691620003f7565b565b90620004fa62000502926003620004da565b6004620004da565b56fe60806040526004361015610013575b6104ff565b61001d5f356100bc565b806306fdde03146100b7578063095ea7b3146100b257806318160ddd146100ad57806323b872dd146100a8578063313ce567146100a357806340c10f191461009e57806370a082311461009957806395d89b4114610094578063a9059cbb1461008f5763dd62ed3e0361000e576104c9565b610466565b610431565b6103fc565b6103aa565b610370565b610312565b6102a3565b61024b565b610162565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f9103126100da57565b6100cc565b5190565b60209181520190565b5f5b8381106100fe575050905f910152565b8060209183015181850152016100ee565b601f801991011690565b6101386101416020936101469361012f816100df565b938480936100e3565b958691016100ec565b61010f565b0190565b61015f9160208201915f818403910152610119565b90565b34610192576101723660046100d0565b61018e61017d61065c565b6101856100c2565b9182918261014a565b0390f35b6100c8565b60018060a01b031690565b6101ab90610197565b90565b6101b7816101a2565b036101be57565b5f80fd5b905035906101cf826101ae565b565b90565b6101dd816101d1565b036101e457565b5f80fd5b905035906101f5826101d4565b565b919060408382031261021f578061021361021c925f86016101c2565b936020016101e8565b90565b6100cc565b151590565b61023290610224565b9052565b9190610249905f60208501940190610229565b565b3461027c576102786102676102613660046101f7565b90610676565b61026f6100c2565b91829182610236565b0390f35b6100c8565b61028a906101d1565b9052565b91906102a1905f60208501940190610281565b565b346102d3576102b33660046100d0565b6102cf6102be6106c5565b6102c66100c2565b9182918261028e565b0390f35b6100c8565b909160608284031261030d5761030a6102f3845f85016101c2565b9361030181602086016101c2565b936040016101e8565b90565b6100cc565b346103435761033f61032e6103283660046102d8565b916106db565b6103366100c2565b91829182610236565b0390f35b6100c8565b60ff1690565b61035790610348565b9052565b919061036e905f6020850194019061034e565b565b346103a0576103803660046100d0565b61039c61038b61070e565b6103936100c2565b9182918261035b565b0390f35b6100c8565b5f0190565b346103d9576103c36103bd3660046101f7565b9061073b565b6103cb6100c2565b806103d5816103a5565b0390f35b6100c8565b906020828203126103f7576103f4915f016101c2565b90565b6100cc565b3461042c576104286104176104123660046103de565b610794565b61041f6100c2565b9182918261028e565b0390f35b6100c8565b34610461576104413660046100d0565b61045d61044c6107b2565b6104546100c2565b9182918261014a565b0390f35b6100c8565b346104975761049361048261047c3660046101f7565b906107c8565b61048a6100c2565b91829182610236565b0390f35b6100c8565b91906040838203126104c457806104b86104c1925f86016101c2565b936020016101c2565b90565b6100cc565b346104fa576104f66104e56104df36600461049c565b90610800565b6104ed6100c2565b9182918261028e565b0390f35b6100c8565b5f80fd5b606090565b634e487b7160e01b5f52602260045260245ffd5b906001600283049216801561053c575b602083101461053757565b610508565b91607f169161052c565b60209181520190565b5f5260205f2090565b905f929180549061057261056b8361051c565b8094610546565b916001811690815f146105c9575060011461058d575b505050565b61059a919293945061054f565b915f925b8184106105b157505001905f8080610588565b6001816020929593955484860152019101929061059e565b92949550505060ff19168252151560200201905f8080610588565b906105ee91610558565b90565b634e487b7160e01b5f52604160045260245ffd5b9061060f9061010f565b810190811067ffffffffffffffff82111761062957604052565b6105f1565b9061064e6106479261063e6100c2565b938480926105e4565b0383610605565b565b6106599061062e565b90565b610664610503565b5061066f6003610650565b90565b5f90565b61069391610682610672565b5061068b61082c565b919091610839565b600190565b5f90565b5f1c90565b90565b6106b06106b59161069c565b6106a1565b90565b6106c290546106a4565b90565b6106cd610698565b506106d860026106b8565b90565b91610705926106e8610672565b506106fd6106f461082c565b82908491610896565b919091610969565b600190565b5f90565b61071661070a565b507f000000000000000000000000000000000000000000000000000000000000000090565b9061074591610a14565b565b90565b61075e61075961076392610197565b610747565b610197565b90565b61076f9061074a565b90565b61077b90610766565b90565b9061078890610772565b5f5260205260405f2090565b6107aa6107af916107a3610698565b505f61077e565b6106b8565b90565b6107ba610503565b506107c56004610650565b90565b6107e5916107d4610672565b506107dd61082c565b919091610969565b600190565b906107f490610772565b5f5260205260405f2090565b6108259161081b61082092610813610698565b5060016107ea565b61077e565b6106b8565b90565b5f90565b610834610828565b503390565b916108479291600192610ad3565b565b610852906101a2565b9052565b60409061087f610886949695939661087560608401985f850190610849565b6020830190610281565b0190610281565b565b9061089391036101d1565b90565b9291926108a4818390610800565b90816108b96108b35f196101d1565b916101d1565b106108c6575b5050509050565b816108d96108d3876101d1565b916101d1565b106108ff576108f693946108ee919392610888565b905f92610ad3565b805f80806108bf565b506109258492919261090f6100c2565b938493637dc7a0d960e11b855260048501610856565b0390fd5b90565b61094061093b61094592610929565b610747565b610197565b90565b6109519061092c565b90565b9190610967905f60208501940190610849565b565b918261098561097f61097a5f610948565b6101a2565b916101a2565b146109e657816109a561099f61099a5f610948565b6101a2565b916101a2565b146109b8576109b692919091610c37565b565b6109e26109c45f610948565b6109cc6100c2565b91829163ec442f0560e01b835260048301610954565b0390fd5b610a106109f25f610948565b6109fa6100c2565b918291634b637e8f60e11b835260048301610954565b0390fd5b80610a2f610a29610a245f610948565b6101a2565b916101a2565b14610a4b57610a4991610a415f610948565b919091610c37565b565b610a75610a575f610948565b610a5f6100c2565b91829163ec442f0560e01b835260048301610954565b0390fd5b5f1b90565b90610a8a5f1991610a79565b9181191691161790565b610aa8610aa3610aad926101d1565b610747565b6101d1565b90565b90565b90610ac8610ac3610acf92610a94565b610ab0565b8254610a7e565b9055565b909281610af0610aea610ae55f610948565b6101a2565b916101a2565b14610bc25783610b10610b0a610b055f610948565b6101a2565b916101a2565b14610b9457610b3483610b2f610b28600186906107ea565b879061077e565b610ab3565b610b3e575b505050565b919091610b89610b77610b717f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610772565b93610772565b93610b806100c2565b9182918261028e565b0390a35f8080610b39565b610bbe610ba05f610948565b610ba86100c2565b918291634a1406b160e11b835260048301610954565b0390fd5b610bec610bce5f610948565b610bd66100c2565b91829163e602df0560e01b835260048301610954565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b610c13610c19919392936101d1565b926101d1565b8201809211610c2457565b610bf0565b90610c3491016101d1565b90565b91909180610c55610c4f610c4a5f610948565b6101a2565b916101a2565b145f14610d3657610c79610c7283610c6d60026106b8565b610c04565b6002610ab3565b5b82610c95610c8f610c8a5f610948565b6101a2565b916101a2565b145f14610d0a57610cb9610cb283610cad60026106b8565b610888565b6002610ab3565b5b919091610d05610cf3610ced7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610772565b93610772565b93610cfc6100c2565b9182918261028e565b0390a3565b610d3182610d2b610d1c5f879061077e565b91610d26836106b8565b610c29565b90610ab3565b610cba565b610d49610d445f839061077e565b6106b8565b80610d5c610d56856101d1565b916101d1565b10610d8457610d6f610d7f918490610888565b610d7a5f849061077e565b610ab3565b610c7a565b90610da9909192610d936100c2565b93849363391434e360e21b855260048501610856565b0390fdfea26469706673582212200b1dfbf2307283746e9a6c580672fb1a2268daaee60eb16f939dbab34915cb5e64736f6c63430008170033";
